context TestPackage {
	constraint hasName { 
		check : self.name.size() > 0
		message : "the package name shouldn't be null"
	}
	constraint hasValidName { 
		check : self.name.matches("^[a-z][a-z0-9_]*$")
		message : "A package name can contain only letters in lowercase, numbers and underscore and should start with a letter"
	}
}

context TestFile {
	constraint hasName {
		check : self.name.size() > 0
		message : "the file name shouldn't be null"
	}
	constraint hasValidName { 
		check : self.name.matches("^[A-Z][a-zA-Z0-9]*Test$")
		message : "A file name can contain only letters, numbers. It should start with an uppercase letter and end with Test"
	}
}

context Method {
	constraint hasName {
		check : self.name.size() > 0 
		message : "the method name shouldn't be null"
	}
	constraint hasValidName { 
		check : self.name.matches("test[A-Z][A-Za-z0-9_]*$")
		message : "A method name can contain only letters, numbers, and underscore. It should start with test followed by an uppercase letter"
	}
}

context TestAnnotation {
	constraint validExceptionName {
		guard : self.expectedException.isDefined()
		check : self.expectedException.matches("^[A-Z][a-zA-Z0-9]*Exception$")
		message : "Exception name should contain only letters and numbers, should start with an uppercase letter, and should end with Exception"
	}
}

context AssertInstruction {
	constraint validAssertionType {
		guard : self.assertionType.isDefined()
		check : self.assertionType.matches("^assert[a-zA-Z]*$")
		message : "An assertion type should start with assert"
	}
}


