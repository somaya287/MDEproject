<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:JavaTestMetaModel="JavaTestMetaModel">
  <JavaTestMetaModel:TestPackage name="first_package">
    <testFiles name="FirstTest">
      <importBlock>
        <staticMethods>org.mockito.Mockito.*</staticMethods>
        <staticMethods>org.junit.jupiter.api.Assertions.*</staticMethods>
        <classes>org.junit.jupiter.api.AfterAll</classes>
        <classes>org.junit.jupiter.api.BeforeAll</classes>
        <classes>org.junit.jupiter.api.Test</classes>
        <classes>org.junit.jupiter.api.AfterEach</classes>
        <classes>org.junit.jupiter.api.BeforeEach</classes>
        <classes>org.junit.jupiter.api.DisplayName</classes>
        <dependencies>third</dependencies>
        <dependencies>anotherONe</dependencies>
      </importBlock>
      <testClass name="FirstTest" displayName="test the classFirst">
        <methods xsi:type="JavaTestMetaModel:TestMethod" name="testSomeMessage" displayName="test the method someMessage">
          <givenBlock>
            <regularInstructions do="// here goes all your additional instructions"/>
            <mockInstructions class="/1"/>
            <mockInstructions class="/2"/>
          </givenBlock>
          <whenBlock>
            <methodCallInstructions methodName="someMessage" class="/3">
              <returnValue name="res" type="Int"/>
            </methodCallInstructions>
            <methodMockInstructions methodName="someOtherMessage" mockedClass="/0/@testFiles.0/@testClass/@methods.0/@givenBlock/@mockInstructions.0">
              <returnValue name="res2" type="Double"/>
            </methodMockInstructions>
            <methodMockInstructions methodName="get" mockedClass="/0/@testFiles.0/@testClass/@methods.0/@givenBlock/@mockInstructions.0">
              <returnValue name="s" type="String"/>
            </methodMockInstructions>
            <methodMockInstructions methodName="lolol" mockedClass="/0/@testFiles.0/@testClass/@methods.0/@givenBlock/@mockInstructions.1">
              <returnValue name="res3" type="Float"/>
            </methodMockInstructions>
            <methodMockInstructions methodName="hhh" mockedClass="/0/@testFiles.0/@testClass/@methods.0/@givenBlock/@mockInstructions.1">
              <returnValue name="rrr" type="String"/>
            </methodMockInstructions>
          </whenBlock>
          <thenBlock>
            <assertInstructions assertionType="assertNull" toCompare="/0/@testFiles.0/@testClass/@methods.0/@whenBlock/@methodCallInstructions.0"/>
            <assertInstructions assertionType="assertTrue" toCompare="/0/@testFiles.0/@testClass/@methods.0/@whenBlock/@methodCallInstructions.0"/>
            <assertInstructions assertionType="assertNotNull" toCompare="/0/@testFiles.0/@testClass/@methods.0/@whenBlock/@methodCallInstructions.0"/>
            <assertInstructions assertionType="assertFalse" toCompare="/0/@testFiles.0/@testClass/@methods.0/@whenBlock/@methodCallInstructions.0"/>
            <assertInstructions assertionType="assertEquals" expected="your expected value" toCompare="/0/@testFiles.0/@testClass/@methods.0/@whenBlock/@methodCallInstructions.0"/>
            <assertInstructions assertionType="assertNotEquals" expected="your expected value" toCompare="/0/@testFiles.0/@testClass/@methods.0/@whenBlock/@methodCallInstructions.0"/>
            <assertInstructions assertionType="assertArrayEquals" expected="your expected value" toCompare="/0/@testFiles.0/@testClass/@methods.0/@whenBlock/@methodCallInstructions.0"/>
          </thenBlock>
        </methods>
        <methods xsi:type="JavaTestMetaModel:AfterAllMethod">
          <instructions do="// here goes the code to be excecuted after all tests"/>
        </methods>
        <methods xsi:type="JavaTestMetaModel:AfterEachMethod">
          <instructions do="// here goes the code to be excecuted after each test"/>
        </methods>
        <methods xsi:type="JavaTestMetaModel:BeforeAllMethod">
          <instructions do="// here goes the code to be excecuted before all tests"/>
        </methods>
        <methods xsi:type="JavaTestMetaModel:BeforeEachMethod">
          <instructions do="// here goes the code to be excecuted before each test"/>
        </methods>
      </testClass>
    </testFiles>
  </JavaTestMetaModel:TestPackage>
  <JavaTestMetaModel:Class name="third"/>
  <JavaTestMetaModel:Class name="anotherONe"/>
  <JavaTestMetaModel:Class name="First" dependencies="/1 /2"/>
</xmi:XMI>
